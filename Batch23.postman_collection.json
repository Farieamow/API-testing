{
	"info": {
		"_postman_id": "6f940115-d84a-43d6-acce-570389836b89",
		"name": "Batch23",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32354362",
		"_collection_link": "https://blue-equinox-754299.postman.co/workspace/It-training~5bb0576b-9b08-4502-be58-555e5faea06e/collection/32354362-6f940115-d84a-43d6-acce-570389836b89?action=share&source=collection_link&creator=32354362"
	},
	"item": [
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data=pm.response.json()\r",
							"pm.environment.set(\"id\",data.bookingid)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName=pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName=pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"//var totalprice=Math.floor(Math.random()*1000);\r",
							"var totalprice=pm.variables.replaceIn(\"{{$randomPrice}}\")\r",
							"pm.environment.set(\"totalprice\",totalprice)\r",
							"console.log(totalprice)\r",
							"\r",
							"var depositPaid =pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositpaid\", depositPaid);\r",
							"console.log(\"deposit Paid\", depositPaid);\r",
							"\r",
							"//date\r",
							"const moment=require('moment')\r",
							"const today=moment()\r",
							"//console.log(today.format(\"YYYY-MM-DD HH:mm:ss\"))\r",
							"\r",
							"var number=Math.random()*10;\r",
							"var checkin=today.add(number,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\",checkin)\r",
							"console.log(checkin)\r",
							"\r",
							"var checkinMoment=moment(checkin,\"YYYY-MM-DD\")\r",
							"let number1=(Math.random()*10)+1;\r",
							"var checkout=checkinMoment.add(number1,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkout\",checkout)\r",
							"console.log(checkout)\r",
							"\r",
							"var Options = [\"Breakfast\", \"Lunch\", \"Dinner\"]\r",
							"var index=Math.floor(Math.random()*Options.length)\r",
							"var additionalneeds=Options[index]\r",
							"pm.environment.set(\"additionalneeds\",additionalneeds)\r",
							"console.log(additionalneeds)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalprice}},\r\n\t\"depositpaid\" : {{depositpaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalneeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/booking/",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var satusCode=pm.response.code\r",
							"console.log(satusCode)\r",
							"\r",
							"switch(satusCode){\r",
							"    case 200:\r",
							"         var data=pm.response.json()\r",
							"        pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"First Name validation\",function(){\r",
							"pm.expect(pm.environment.get(\"firstName\")).eql(data.firstname)})\r",
							"\r",
							"pm.test(\"Last Name validation\",function(){\r",
							"pm.expect(pm.environment.get(\"lastName\")).eql(data.lastname)})\r",
							"\r",
							"pm.test(\"Total price validation\",function(){\r",
							"pm.expect(parseInt(pm.environment.get(\"totalprice\"))).eql(data.totalprice)})\r",
							"\r",
							"pm.test(\"deposit paid validation\",function(){\r",
							"pm.expect(pm.environment.get(\"depositpaid\")).eql(data.depositpaid.toString())})\r",
							"\r",
							"pm.test(\"checkin validation\",function(){\r",
							"pm.expect(pm.environment.get(\"checkin\")).eql(data.bookingdates.checkin)})\r",
							"\r",
							"pm.test(\"checkout validation\",function(){\r",
							"pm.expect(pm.environment.get(\"checkout\")).eql(data.bookingdates.checkout)})\r",
							"\r",
							"pm.test(\"Additionalneeds validation\",function(){\r",
							"pm.expect(pm.environment.get(\"additionalneeds\")).eql(data.additionalneeds)})\r",
							"    \r",
							"\r",
							"        break;\r",
							"    \r",
							"    case 404:\r",
							"        pm.test(\"Not Found\")\r",
							"        break;\r",
							"\r",
							"    case 500:\r",
							"        pm.test(\"Internal Servar Error\")    \r",
							"        break;\r",
							"\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_url}}/booking/{{id}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let auth=pm.response.json()\r",
							"pm.environment.set(\"accesstoken\",auth.token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName=pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName=pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"var totalprice=pm.variables.replaceIn(\"{{$randomPrice}}\")\r",
							"pm.environment.set(\"totalprice\",totalprice)\r",
							"console.log(totalprice)\r",
							"\r",
							"var depositPaid =pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositpaid\", depositPaid);\r",
							"console.log(\"deposit Paid\", depositPaid);\r",
							"\r",
							"\r",
							"//date\r",
							"const moment=require('moment')\r",
							"const today=moment()\r",
							"//console.log(today.format(\"YYYY-MM-DD HH:mm:ss\"))\r",
							"\r",
							"var number=Math.random()*10;\r",
							"var checkin=today.add(number,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\",checkin)\r",
							"console.log(checkin)\r",
							"\r",
							"var checkinMoment=moment(checkin,\"YYYY-MM-DD\")\r",
							"let number1=(Math.random()*10)+1;\r",
							"var checkout=checkinMoment.add(number1,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkout\",checkout)\r",
							"console.log(checkout)\r",
							"\r",
							"var Options = [\"Breakfast\", \"Lunch\", \"Dinner\"]\r",
							"var index=Math.floor(Math.random()*Options.length)\r",
							"var additionalneeds=Options[index]\r",
							"pm.environment.set(\"additionalneeds\",additionalneeds)\r",
							"console.log(additionalneeds)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code=pm.response.code\r",
							"if(code==401||code==403){\r",
							"    pm.test(\"Token\")\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{accesstoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalprice}},\r\n\t\"depositpaid\" : {{depositpaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalneeds}}\"\r\n}\r\n\r\n\r\n/*{\r\n\t\"firstname\" : \"James\",\r\n\t\"lastname\" : \"Brown\",\r\n\t\"totalprice\" : 111,\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"2018-01-01\",\r\n    \t\"checkout\" : \"2019-01-01\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}*/\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/booking/{{id}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "verify update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var satuscode=pm.response.code\r",
							"console.log(satuscode)\r",
							"if(satuscode==200){\r",
							"   var data=pm.response.json()\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"First Name validation\",function(){\r",
							"pm.expect(pm.environment.get(\"firstName\")).eql(data.firstname)})\r",
							"\r",
							"pm.test(\"Last Name validation\",function(){\r",
							"pm.expect(pm.environment.get(\"lastName\")).eql(data.lastname)})\r",
							"\r",
							"pm.test(\"Total price validation\",function(){\r",
							"pm.expect(parseInt(pm.environment.get(\"totalprice\"))).eql(data.totalprice)})\r",
							"\r",
							"pm.test(\"deposit paid validation\",function(){\r",
							"pm.expect(pm.environment.get(\"depositpaid\")).eql(data.depositpaid.toString())})\r",
							"\r",
							"pm.test(\"checkin validation\",function(){\r",
							"    console.log(\"Data Object:\", data);\r",
							"pm.expect(pm.environment.get(\"checkin\")).eql(data.bookingdates.checkin)})\r",
							"\r",
							"pm.test(\"checkout validation\",function(){\r",
							"pm.expect(pm.environment.get(\"checkout\")).eql(data.bookingdates.checkout)})\r",
							"\r",
							"pm.test(\"Additionalneeds validation\",function(){\r",
							"pm.expect(pm.environment.get(\"additionalneeds\")).eql(data.additionalneeds)})\r",
							" \r",
							"}\r",
							"else if(satuscode==404){\r",
							"    pm.test(\"not found\")\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_url}}/booking/{{id}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{accesstoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/booking/{{id}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_url}}/booking/{{id}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}